# automatically generated by the FlatBuffers compiler, do not modify

# namespace: apemodefb

import flatbuffers

class LightFb(object):
    __slots__ = ['_tab']

    # LightFb
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LightFb
    def Id(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # LightFb
    def NameId(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # LightFb
    def LightType(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # LightFb
    def AreaLightType(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(12))
    # LightFb
    def Color(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 16)
        return obj

    # LightFb
    def Fog(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(28))
    # LightFb
    def Intensity(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(32))
    # LightFb
    def InnerAngle(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(36))
    # LightFb
    def NearAttenuationStart(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(40))
    # LightFb
    def NearAttenuationEnd(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(44))
    # LightFb
    def FarAttenuationStart(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(48))
    # LightFb
    def FarAttenuationEnd(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(52))
    # LightFb
    def OuterAngle(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(56))
    # LightFb
    def DecayStart(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(60))
    # LightFb
    def CastsShadows(self): return self._tab.Get(flatbuffers.number_types.BoolFlags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(64))

def CreateLightFb(builder, id, nameId, lightType, areaLightType, color_x, color_y, color_z, fog, intensity, innerAngle, nearAttenuationStart, nearAttenuationEnd, farAttenuationStart, farAttenuationEnd, outerAngle, decayStart, castsShadows):
    builder.Prep(4, 68)
    builder.Pad(3)
    builder.PrependBool(castsShadows)
    builder.PrependFloat32(decayStart)
    builder.PrependFloat32(outerAngle)
    builder.PrependFloat32(farAttenuationEnd)
    builder.PrependFloat32(farAttenuationStart)
    builder.PrependFloat32(nearAttenuationEnd)
    builder.PrependFloat32(nearAttenuationStart)
    builder.PrependFloat32(innerAngle)
    builder.PrependFloat32(intensity)
    builder.PrependFloat32(fog)
    builder.Prep(4, 12)
    builder.PrependFloat32(color_z)
    builder.PrependFloat32(color_y)
    builder.PrependFloat32(color_x)
    builder.PrependUint32(areaLightType)
    builder.PrependUint32(lightType)
    builder.PrependUint32(nameId)
    builder.PrependUint32(id)
    return builder.Offset()
