# automatically generated by the FlatBuffers compiler, do not modify

# namespace: apemodefb

import flatbuffers

class NameFb(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsNameFb(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = NameFb()
        x.Init(buf, n + offset)
        return x

    # NameFb
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # NameFb
    def H(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # NameFb
    def V(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

def NameFbStart(builder): builder.StartObject(2)
def NameFbAddH(builder, h): builder.PrependUint64Slot(0, h, 0)
def NameFbAddV(builder, v): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(v), 0)
def NameFbEnd(builder): return builder.EndObject()
