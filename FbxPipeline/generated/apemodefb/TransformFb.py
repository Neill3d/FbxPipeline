# automatically generated by the FlatBuffers compiler, do not modify

# namespace: apemodefb

import flatbuffers

class TransformFb(object):
    __slots__ = ['_tab']

    # TransformFb
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TransformFb
    def Translation(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 0)
        return obj

    # TransformFb
    def RotationOffset(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 12)
        return obj

    # TransformFb
    def RotationPivot(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 24)
        return obj

    # TransformFb
    def PreRotation(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 36)
        return obj

    # TransformFb
    def PostRotation(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 48)
        return obj

    # TransformFb
    def Rotation(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 60)
        return obj

    # TransformFb
    def ScalingOffset(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 72)
        return obj

    # TransformFb
    def ScalingPivot(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 84)
        return obj

    # TransformFb
    def Scaling(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 96)
        return obj

    # TransformFb
    def GeometricTranslation(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 108)
        return obj

    # TransformFb
    def GeometricRotation(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 120)
        return obj

    # TransformFb
    def GeometricScaling(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 132)
        return obj


def CreateTransformFb(builder, translation_x, translation_y, translation_z, rotation_offset_x, rotation_offset_y, rotation_offset_z, rotation_pivot_x, rotation_pivot_y, rotation_pivot_z, pre_rotation_x, pre_rotation_y, pre_rotation_z, post_rotation_x, post_rotation_y, post_rotation_z, rotation_x, rotation_y, rotation_z, scaling_offset_x, scaling_offset_y, scaling_offset_z, scaling_pivot_x, scaling_pivot_y, scaling_pivot_z, scaling_x, scaling_y, scaling_z, geometric_translation_x, geometric_translation_y, geometric_translation_z, geometric_rotation_x, geometric_rotation_y, geometric_rotation_z, geometric_scaling_x, geometric_scaling_y, geometric_scaling_z):
    builder.Prep(4, 144)
    builder.Prep(4, 12)
    builder.PrependFloat32(geometric_scaling_z)
    builder.PrependFloat32(geometric_scaling_y)
    builder.PrependFloat32(geometric_scaling_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(geometric_rotation_z)
    builder.PrependFloat32(geometric_rotation_y)
    builder.PrependFloat32(geometric_rotation_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(geometric_translation_z)
    builder.PrependFloat32(geometric_translation_y)
    builder.PrependFloat32(geometric_translation_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(scaling_z)
    builder.PrependFloat32(scaling_y)
    builder.PrependFloat32(scaling_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(scaling_pivot_z)
    builder.PrependFloat32(scaling_pivot_y)
    builder.PrependFloat32(scaling_pivot_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(scaling_offset_z)
    builder.PrependFloat32(scaling_offset_y)
    builder.PrependFloat32(scaling_offset_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(rotation_z)
    builder.PrependFloat32(rotation_y)
    builder.PrependFloat32(rotation_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(post_rotation_z)
    builder.PrependFloat32(post_rotation_y)
    builder.PrependFloat32(post_rotation_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(pre_rotation_z)
    builder.PrependFloat32(pre_rotation_y)
    builder.PrependFloat32(pre_rotation_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(rotation_pivot_z)
    builder.PrependFloat32(rotation_pivot_y)
    builder.PrependFloat32(rotation_pivot_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(rotation_offset_z)
    builder.PrependFloat32(rotation_offset_y)
    builder.PrependFloat32(rotation_offset_x)
    builder.Prep(4, 12)
    builder.PrependFloat32(translation_z)
    builder.PrependFloat32(translation_y)
    builder.PrependFloat32(translation_x)
    return builder.Offset()
